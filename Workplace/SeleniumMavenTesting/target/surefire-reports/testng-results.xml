<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="38841" started-at="2022-09-27T03:29:00Z" finished-at="2022-09-27T03:29:39Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="38841" started-at="2022-09-27T03:29:00Z" finished-at="2022-09-27T03:29:39Z">
      <class name="extentReport.extentReportPractice">
        <test-method status="PASS" signature="startTest()[pri:0, instance:extentReport.extentReportPractice@222114ba]" name="startTest" is-config="true" duration-ms="9" started-at="2022-09-27T03:29:01Z" finished-at="2022-09-27T03:29:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="Actualcode()[pri:0, instance:extentReport.extentReportPractice@222114ba]" name="Actualcode" duration-ms="37106" started-at="2022-09-27T03:29:01Z" finished-at="2022-09-27T03:29:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Actualcode -->
        <test-method status="PASS" signature="EndTest()[pri:0, instance:extentReport.extentReportPractice@222114ba]" name="EndTest" is-config="true" duration-ms="834" started-at="2022-09-27T03:29:38Z" finished-at="2022-09-27T03:29:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EndTest -->
      </class> <!-- extentReport.extentReportPractice -->
      <class name="extentReport.ExtentReport">
        <test-method status="PASS" signature="startTest()[pri:0, instance:extentReport.ExtentReport@60dcc9fe]" name="startTest" is-config="true" duration-ms="616" started-at="2022-09-27T03:29:00Z" finished-at="2022-09-27T03:29:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="PASS" signature="test1()[pri:0, instance:extentReport.ExtentReport@60dcc9fe]" name="test1" duration-ms="17" started-at="2022-09-27T03:29:01Z" finished-at="2022-09-27T03:29:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:extentReport.ExtentReport@60dcc9fe]" name="getResult" is-config="true" duration-ms="12" started-at="2022-09-27T03:29:01Z" finished-at="2022-09-27T03:29:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test1 status=SUCCESS method=ExtentReport.test1()[pri:0, instance:extentReport.ExtentReport@60dcc9fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="test2()[pri:0, instance:extentReport.ExtentReport@60dcc9fe]" name="test2" duration-ms="2" started-at="2022-09-27T03:29:01Z" finished-at="2022-09-27T03:29:01Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at extentReport.ExtentReport.test2(ExtentReport.java:33)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:extentReport.ExtentReport@60dcc9fe]" name="getResult" is-config="true" duration-ms="3" started-at="2022-09-27T03:29:01Z" finished-at="2022-09-27T03:29:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test2 status=FAILURE method=ExtentReport.test2()[pri:0, instance:extentReport.ExtentReport@60dcc9fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endtest()[pri:0, instance:extentReport.ExtentReport@60dcc9fe]" name="endtest" is-config="true" duration-ms="139" started-at="2022-09-27T03:29:39Z" finished-at="2022-09-27T03:29:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endtest -->
      </class> <!-- extentReport.ExtentReport -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
